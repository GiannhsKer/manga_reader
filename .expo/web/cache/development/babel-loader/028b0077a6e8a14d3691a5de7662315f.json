{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Swiper from 'react-native-swipe-image';\n\nvar Display = function Display(_ref) {\n  var route = _ref.route;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var fetchData = function fetchData(url) {\n    var response;\n    return _regeneratorRuntime.async(function fetchData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(url));\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.json());\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getMangas = function getMangas() {\n    try {\n      fetchData(\"https://mangareader3.herokuapp.com/\" + route.params.title + \"/\" + route.params.chapter).then(function (data) {\n        setData(data);\n        setLoading(false);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(function () {\n    getMangas();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    }\n  }, React.createElement(Swiper, {\n    images: data,\n    swipeBottom: function swipeBottom(e) {\n      return _this.bottom(e);\n    },\n    swipeTop: function swipeTop(e) {\n      return _this.top(e);\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black'\n  },\n  page: {\n    marginTop: 40,\n    height: 500\n  }\n});\nexport default Display;","map":{"version":3,"sources":["/home/yanes/Documents/manga_reader/screens/Display.js"],"names":["React","useState","useEffect","Swiper","Display","route","isLoading","setLoading","data","setData","fetchData","url","fetch","response","json","getMangas","params","title","chapter","then","error","console","flex","e","bottom","top","styles","StyleSheet","create","container","backgroundColor","page","marginTop","height"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;;;AAIA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAa;AAAA,MAAXC,KAAW,QAAXA,KAAW;;AAEzB,kBAAgCJ,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOK,SAAP;AAAA,MAAkBC,UAAlB;;AACA,mBAAwBN,QAAQ,EAAhC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACOC,KAAK,CAACD,GAAD,CADZ;;AAAA;AACVE,YAAAA,QADU;AAAA,6CAETA,QAAQ,CAACC,IAAT,EAFS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAKA,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,QAAI;AACFL,MAAAA,SAAS,yCAAuCL,KAAK,CAACW,MAAN,CAAaC,KAApD,SAA6DZ,KAAK,CAACW,MAAN,CAAaE,OAA1E,CAAT,CAA8FC,IAA9F,CAAmG,UAACX,IAAD,EAAU;AAC3GC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAHD;AAID,KALD,CAKE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GATD;;AAYAlB,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,SAeA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEO,MAAAA,IAAI,EAAE;AAAR;AAAb,KACD,oBAAC,MAAD;AACD,IAAA,MAAM,EAAEd,IADP;AAED,IAAA,WAAW,EAAE,qBAACe,CAAD;AAAA,aAAO,KAAI,CAACC,MAAL,CAAYD,CAAZ,CAAP;AAAA,KAFZ;AAGD,IAAA,QAAQ,EAAE,kBAACA,CAAD;AAAA,aAAO,KAAI,CAACE,GAAL,CAASF,CAAT,CAAP;AAAA;AAHT,IADC,CAfA;AA4BH,CAtDD;;AAwDA,IAAMG,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPP,IAAAA,IAAI,EAAC,CADE;AAEPQ,IAAAA,eAAe,EAAE;AAFV,GADkB;AAK7BC,EAAAA,IAAI,EAAC;AACDC,IAAAA,SAAS,EAAE,EADV;AAEDC,IAAAA,MAAM,EAAC;AAFN;AALwB,CAAlB,CAAf;AAYA,eAAe7B,OAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { View, SafeAreaView, ActivityIndicator, StyleSheet, ScrollView, Image, Dimensions } from 'react-native';\n// import ImageZoom from 'react-native-image-pan-zoom';\n// import ImageViewer from 'react-native-image-zoom-viewer';\nimport Swiper from 'react-native-swipe-image';\n\nconst Display = ({route}) => {\n\n    const [isLoading, setLoading] = useState(true);\n    const [data, setData] = useState();\n  \n    const fetchData = async (url) => {\n      const response = await fetch(url);\n      return response.json();\n    };\n  \n    const getMangas = () => {\n      try {\n        fetchData(`https://mangareader3.herokuapp.com/${route.params.title}/${route.params.chapter}`).then((data) => {\n          setData(data);\n          setLoading(false);\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    };\n  \n  \n    useEffect(() => {\n      getMangas();\n    }, []);\n\n    return (\n    //   <ScrollView style={styles.container}>\n    //     {isLoading ? <ActivityIndicator/> : (\n    //       data.map(page=>(\n    //         <ImageZoom \n\t// \t\t\tcropWidth={Dimensions.get('window').width}\n    //             cropHeight={Dimensions.get('window').height}\n    //             imageWidth={200}\n    //             imageHeight={200}\n    //             >\n\t// \t\t\t<Image style={styles.page} source={{uri: page}}></Image>\n\t// \t\t</ImageZoom>\n    //       ))\n    //     )}\n    // \t</ScrollView>\n    <View style={{ flex: 1 }}>\n\t  <Swiper\n\t\timages={data}\n\t\tswipeBottom={(e) => this.bottom(e)}\n\t\tswipeTop={(e) => this.top(e)}\n\t\t// imageHeight={number}\n\t\t// textSize={number}\n\t\t// textBold={boolean}\n\t\t// textColor={String}\n\t\t// textUnderline={boolean}\n\t  />\n\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex:1,\n        backgroundColor: 'black',\n    },\n    page:{\n        marginTop: 40,\n        height:500,\n        // resizeMode:'contain',\n    }\n});\n\nexport default Display;"]},"metadata":{},"sourceType":"module"}