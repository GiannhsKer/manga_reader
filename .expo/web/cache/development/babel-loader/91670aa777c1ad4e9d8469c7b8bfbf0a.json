{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/yanes/Documents/manga_reader/App.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport { uuid } from 'uuidv4';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\n\nvar App = function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedId = _useState2[0],\n      setSelectedId = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  var getMovies = function getMovies() {\n    var response, json;\n    return _regeneratorRuntime.async(function getMovies$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://reactnative.dev/movies.json'));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setData(json.movies);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 13:\n            _context.prev = 13;\n            setLoading(false);\n            return _context.finish(13);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10, 13, 16]], Promise);\n  };\n\n  useEffect(function () {\n    getMovies();\n  }, []);\n  var array = [\"one piece\", \"beruseruku\"];\n  var mangas = [{\n    id: uuid(),\n    title: array[0],\n    volumes: array[0]\n  }, {\n    id: uuid(),\n    title: array[1],\n    volumes: array[1]\n  }];\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Manga Reader\"), React.createElement(View, {\n    style: styles.list,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, React.createElement(FlatList, {\n    data: data,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }\n      }, item.title, \", \", item.releaseYear);\n    },\n    keyExtractor: function keyExtractor(_ref2, index) {\n      var id = _ref2.id;\n      return id;\n    },\n    extractData: selectedId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'grey',\n    height: '100%',\n    width: '100%',\n    alignContent: 'center'\n  },\n  text: {\n    textAlign: 'center',\n    color: 'red',\n    fontSize: 35,\n    marginTop: 50\n  },\n  list: {\n    marginTop: 80,\n    alignItems: 'center'\n  },\n  item: {\n    alignSelf: 'center',\n    backgroundColor: 'darkslateblue',\n    padding: 20,\n    marginTop: 40\n  }\n});\nexport default App;","map":{"version":3,"sources":["/home/yanes/Documents/manga_reader/App.js"],"names":["React","useEffect","useState","uuid","App","selectedId","setSelectedId","isLoading","setLoading","data","setData","getMovies","fetch","response","json","movies","console","error","array","mangas","id","title","volumes","styles","container","text","list","item","releaseYear","index","StyleSheet","create","backgroundColor","height","width","alignContent","textAlign","color","fontSize","marginTop","alignItems","alignSelf","padding"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { uuid } from 'uuidv4';\nimport { Text, StyleSheet, Button, View, FlatList, TouchableOpacity, ActivityIndicator } from 'react-native';\n\n\nconst App = () => {\n\n    const [selectedId, setSelectedId] = useState(null);\n    const [isLoading, setLoading] = useState(true);\n    const [data, setData] = useState([]);\n\n    const getMovies = async () => {\n        try {\n            const response = await fetch('https://reactnative.dev/movies.json');\n            const json = await response.json();\n            setData(json.movies);\n        }\n        catch (error) {\n            console.error(error);\n        }\n        finally {\n            setLoading(false);\n        }\n    }\n\n    useEffect(() => {\n        getMovies();\n    }, []);\n\n    //Content list\n    const array = [\"one piece\", \"beruseruku\"]\n    const mangas = [\n        { id: uuid(), title: array[0], volumes: array[0] },\n        { id: uuid(), title: array[1], volumes: array[1] }\n    ]\n\n    // const Item = ({ item, onPress, style }) => (\n    //     <TouchableOpacity onPress={onPress} style={[styles.item, style]}>\n    //         <Text style={{ fontSize: 20 }}>{item.title}</Text>\n    //     </TouchableOpacity>\n    // );\n\n    // const renderItem = ({ item }) => {\n    //     const backgroundColor = item.id === selectedId ? \"firebrick\" : \"darkslateblue\";\n    //     return (\n    //         <Item\n    //             item={item}\n    //             onPress={() => setSelectedId(item.id)}\n    //             style={{ backgroundColor }}\n    //         />\n    //     );\n    // };\n\n    return (\n        \n        <View style = {styles.container}>\n            <Text style = {styles.text}>Manga Reader</Text>\n              <View style = {styles.list}>\n                  <FlatList\n                        data={data}\n                    //   renderItem={renderItem}\n                        renderItem={({ item }) => (\n                            <Text>{item.title}, {item.releaseYear}</Text>\n                        )}\n                    //   keyExtractor={item => item.id}\n                    \n                      keyExtractor={({ id }, index) => id}\n                      extractData={selectedId}\n                  />\n                  {/* {isLoading ? <ActivityIndicator/> : (\n\n                    )} */}\n              </View>\n        </View>\n        \n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: 'grey',\n        height: '100%',\n        width: '100%',\n        alignContent: 'center',\n    },\n    text: {\n        textAlign: 'center',\n        color: 'red',\n        fontSize: 35,\n        marginTop: 50,\n    },\n    list: {\n      marginTop: 80,\n      alignItems: 'center'\n    },\n    item: {\n        alignSelf: 'center',\n        backgroundColor: 'darkslateblue',\n        padding: 20,\n        marginTop: 40,\n    }\n});\n\nexport default App;"]},"metadata":{},"sourceType":"module"}