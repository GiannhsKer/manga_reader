{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/yanes/Documents/manga_reader/App.js\";\n\nimport React, { useState } from 'react';\nimport { v4 as uuid_v4 } from 'uuid';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport data from \"./Data/Mangas.json\";\n\nvar App = function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedId = _useState2[0],\n      setSelectedId = _useState2[1];\n\n  var mangas = Object.keys(data);\n\n  var Item = function Item(_ref) {\n    var item = _ref.item,\n        onPress = _ref.onPress,\n        style = _ref.style;\n    return React.createElement(TouchableOpacity, {\n      onPress: onPress,\n      style: [styles.item, style],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, mangas.forEach(function (manga) {\n      return manga;\n    })));\n  };\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    var backgroundColor = item.id === selectedId ? \"firebrick\" : \"darkslateblue\";\n    return React.createElement(Item, {\n      item: item,\n      onPress: function onPress() {\n        return setSelectedId(item.id);\n      },\n      style: {\n        backgroundColor: backgroundColor\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Manga Reader\"), React.createElement(View, {\n    style: styles.list,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, React.createElement(FlatList, {\n    data: mangas.map(function (manga) {\n      return manga;\n    }),\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    extractData: selectedId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'grey',\n    height: '100%',\n    width: '100%',\n    alignContent: 'center'\n  },\n  text: {\n    textAlign: 'center',\n    color: 'red',\n    fontSize: 35,\n    marginTop: 50\n  },\n  list: {\n    marginTop: 80,\n    alignItems: 'center'\n  },\n  item: {\n    alignSelf: 'center',\n    backgroundColor: 'darkslateblue',\n    padding: 15,\n    marginTop: 20\n  }\n});\nexport default App;","map":{"version":3,"sources":["/home/yanes/Documents/manga_reader/App.js"],"names":["React","useState","v4","uuid_v4","data","App","selectedId","setSelectedId","mangas","Object","keys","Item","item","onPress","style","styles","fontSize","forEach","manga","renderItem","backgroundColor","id","container","text","list","map","StyleSheet","create","height","width","alignContent","textAlign","color","marginTop","alignItems","alignSelf","padding"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { v4 as uuid_v4 } from 'uuid';\nimport { Text, StyleSheet, Button, View, FlatList, TouchableOpacity } from 'react-native';\n\nimport data from './Data/Mangas.json'\n\nconst App = () => {\n\n    const [selectedId, setSelectedId] = useState(null);\n\n    \n    const mangas = Object.keys(data)\n\n    // const [isLoading, setLoading] = useState(true);\n    // const [mangas, setMangas] = useState(Object.keys(mangas));\n\n    // const getMangas = async () => {\n    //     try {\n    //         const response = await fetch('http://localhost:3000/Mangas');\n    //         const json = await response.json();\n    //         setMangas(Object.keys(json))\n    //     }\n    //     catch (error) {\n    //         console.error(error);\n    //     }\n    //     finally {\n    //         setLoading(false);\n    //     }\n    // }\n\n    // useEffect(() => {\n    //     getMangas();\n    // }, []);\n\n    const Item = ({ item, onPress, style }) => (\n        <TouchableOpacity onPress={onPress} style={[styles.item, style]}>\n            <Text style={{ fontSize: 20 }}>{mangas.forEach(manga => manga)}</Text>\n        </TouchableOpacity>\n    );\n\n    const renderItem = ({ item }) => {\n        const backgroundColor = item.id === selectedId ? \"firebrick\" : \"darkslateblue\";\n        return (\n            <Item\n                item={item}\n                onPress={() => setSelectedId(item.id)}\n                style={{ backgroundColor }}\n            />\n        );\n    };\n\n    return (\n        \n        <View style = {styles.container}>\n            <Text style = {styles.text}>Manga Reader</Text>\n              <View style = {styles.list}>\n                    <FlatList\n                        data={mangas.map(manga => manga)}\n                        renderItem={renderItem}\n                        keyExtractor={item => item.id}\n                        extractData={selectedId}\n                  />\n              </View>\n        </View>\n        \n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: 'grey',\n        height: '100%',\n        width: '100%',\n        alignContent: 'center',\n    },\n    text: {\n        textAlign: 'center',\n        color: 'red',\n        fontSize: 35,\n        marginTop: 50,\n    },\n    list: {\n      marginTop: 80,\n      alignItems: 'center'\n    },\n    item: {\n        alignSelf: 'center',\n        backgroundColor: 'darkslateblue',\n        padding: 15,\n        marginTop: 20,\n    }\n});\n\nexport default App;"]},"metadata":{},"sourceType":"module"}