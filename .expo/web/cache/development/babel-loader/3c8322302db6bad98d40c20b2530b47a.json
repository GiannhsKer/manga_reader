{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageZoom from 'react-native-image-pan-zoom';\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ImageZoom, {\n        cropWidth: Dimensions.get('window').width,\n        cropHeight: Dimensions.get('window').height,\n        imageWidth: 200,\n        imageHeight: 200\n      }, React.createElement(Image, {\n        style: {\n          width: 200,\n          height: 200\n        },\n        source: {\n          uri: 'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg'\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["/home/yanes/Documents/manga_reader/screens/Display.js"],"names":["React","useState","useEffect","ImageZoom","App","Dimensions","get","width","height","uri","Component"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;;;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;;IAkDqBC,G;;;;;;;;;;;;;WACjB,kBAAU;AACN,aACI,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA/C;AACW,QAAA,UAAU,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBE,MADhD;AAEW,QAAA,UAAU,EAAE,GAFvB;AAGW,QAAA,WAAW,EAAE;AAHxB,SAII,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAACD,UAAAA,KAAK,EAAC,GAAP;AAAYC,UAAAA,MAAM,EAAC;AAAnB,SAAd;AACO,QAAA,MAAM,EAAE;AAACC,UAAAA,GAAG,EAAC;AAAL;AADf,QAJJ,CADJ;AASH;;;;EAX4BT,KAAK,CAACU,S;;SAAlBN,G","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { View, SafeAreaView, ActivityIndicator, StyleSheet, ScrollView, Image, Dimensions } from 'react-native';\nimport ImageZoom from 'react-native-image-pan-zoom';\n// import ImageViewer from 'react-native-image-zoom-viewer';\n// import Swiper from 'react-native-swipe-image';\n// import GallerySwiper from \"react-native-gallery-swiper\";\n\n// const Display = ({route}) => {\n\n//     const [isLoading, setLoading] = useState(true);\n//     const [data, setData] = useState();\n  \n//     const fetchData = async (url) => {\n//       const response = await fetch(url);\n//       return response.json();\n//     };\n  \n//     const getMangas = () => {\n//       try {\n//         // fetchData(`https://mangareader3.herokuapp.com/${route.params.title}/${route.params.chapter}`).then((data) => {\n// \t\tfetchData(`https://mangareader3.herokuapp.com/One Piece/920`).then((data) => {\n//           setData(data);\n//           setLoading(false);\n//         });\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     };\n  \n  \n//     useEffect(() => {\n//       getMangas();\n//     }, []);\n\n//     return (\n    //   <ScrollView style={styles.container}>\n    //     {isLoading ? <ActivityIndicator/> : (\n    //       data.map(page=>(\n    //         <ImageZoom \n\t// \t\t\tcropWidth={Dimensions.get('window').width}\n    //             cropHeight={Dimensions.get('window').height}\n    //             imageWidth={200}\n    //             imageHeight={200}\n    //             >\n\t// \t\t\t<Image style={styles.page} source={{uri: page}}></Image>\n\t// \t\t</ImageZoom>\n    //       ))\n    //     )}\n    // \t</ScrollView>\n// \t);\n// }\n \nexport default class App extends React.Component {\n    render () {\n        return (\n            <ImageZoom cropWidth={Dimensions.get('window').width}\n                       cropHeight={Dimensions.get('window').height}\n                       imageWidth={200}\n                       imageHeight={200}>\n                <Image style={{width:200, height:200}}\n                       source={{uri:'https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg'}}/>\n            </ImageZoom>\n        )\n    }\n}\n\n// const styles = StyleSheet.create({\n//     container: {\n//         flex:1,\n//         backgroundColor: 'black',\n//     },\n//     page:{\n//         marginTop: 40,\n//         height:500,\n//         // resizeMode:'contain',\n//     }\n// });\n\n// export default Display;"]},"metadata":{},"sourceType":"module"}