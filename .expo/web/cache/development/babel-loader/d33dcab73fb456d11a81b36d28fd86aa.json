{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport uuid from 'react-native-uuid';\n\nvar Chapters = function Chapters(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var fetchData = function fetchData(url) {\n    var response;\n    return _regeneratorRuntime.async(function fetchData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(url));\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.json());\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getMangas = function getMangas() {\n    try {\n      fetchData(\"https://mangareader3.herokuapp.com/\" + route.params.manga).then(function (data) {\n        setData(data);\n        setLoading(false);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(function () {\n    getMangas();\n  }, []);\n  return React.createElement(ScrollView, {\n    style: styles.container\n  }, console.log(data[0]), React.createElement(Text, {\n    style: styles.title\n  }, \"manga_reader\"), React.createElement(Text, {\n    style: styles.manga_title\n  }, \" \", route.params.manga));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black'\n  },\n  title: {\n    alignSelf: 'center',\n    color: 'white',\n    fontSize: 35,\n    marginTop: 50\n  },\n  manga_title: {\n    alignSelf: 'center',\n    color: 'red',\n    fontSize: 20,\n    marginTop: 20\n  },\n  itemslist: {\n    marginTop: 50,\n    flexDirection: 'row-reverse',\n    justifyContent: 'space-around',\n    flexWrap: \"wrap-reverse\"\n  },\n  volume: {\n    width: 70,\n    marginTop: 20,\n    fontSize: 20,\n    backgroundColor: 'lightblue',\n    padding: 10,\n    borderRadius: 10\n  }\n});\nexport default Chapters;","map":{"version":3,"sources":["/home/yanes/Documents/manga_reader/screens/Chapters.js"],"names":["React","useState","useEffect","uuid","Chapters","navigation","route","isLoading","setLoading","data","setData","fetchData","url","fetch","response","json","getMangas","params","manga","then","error","console","styles","container","log","title","manga_title","StyleSheet","create","flex","backgroundColor","alignSelf","color","fontSize","marginTop","itemslist","flexDirection","justifyContent","flexWrap","volume","width","padding","borderRadius"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;;;;;;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAyB;AAAA,MAAvBC,UAAuB,QAAvBA,UAAuB;AAAA,MAAXC,KAAW,QAAXA,KAAW;;AAEtC,kBAAgCL,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOM,SAAP;AAAA,MAAkBC,UAAlB;;AACA,mBAAwBP,QAAQ,EAAhC;AAAA;AAAA,MAAOQ,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACOC,KAAK,CAACD,GAAD,CADZ;;AAAA;AACVE,YAAAA,QADU;AAAA,6CAETA,QAAQ,CAACC,IAAT,EAFS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAKA,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,QAAI;AACFL,MAAAA,SAAS,yCAAuCL,KAAK,CAACW,MAAN,CAAaC,KAApD,CAAT,CAAsEC,IAAtE,CAA2E,UAACV,IAAD,EAAU;AACnFC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAHD;AAID,KALD,CAKE,OAAOY,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GATD;;AAWAlB,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,SACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEM,MAAM,CAACC;AAA1B,KACKF,OAAO,CAACG,GAAR,CAAYf,IAAI,CAAC,CAAD,CAAhB,CADL,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIa,MAAM,CAACG;AAAtB,oBAFJ,EAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIH,MAAM,CAACI;AAAtB,UAAqCpB,KAAK,CAACW,MAAN,CAAaC,KAAlD,CAHJ,CADJ;AAcH,CAvCD;;AA0CA,IAAMI,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,SAAS,EAAE;AACPM,IAAAA,IAAI,EAAC,CADE;AAEPC,IAAAA,eAAe,EAAE;AAFV,GADkB;AAK7BL,EAAAA,KAAK,EAAE;AACHM,IAAAA,SAAS,EAAE,QADR;AAEHC,IAAAA,KAAK,EAAE,OAFJ;AAGHC,IAAAA,QAAQ,EAAE,EAHP;AAIHC,IAAAA,SAAS,EAAE;AAJR,GALsB;AAW7BR,EAAAA,WAAW,EAAC;AACRK,IAAAA,SAAS,EAAE,QADH;AAERC,IAAAA,KAAK,EAAE,KAFC;AAGRC,IAAAA,QAAQ,EAAE,EAHF;AAIRC,IAAAA,SAAS,EAAE;AAJH,GAXiB;AAiB7BC,EAAAA,SAAS,EAAE;AACPD,IAAAA,SAAS,EAAC,EADH;AAEPE,IAAAA,aAAa,EAAE,aAFR;AAGPC,IAAAA,cAAc,EAAE,cAHT;AAIPC,IAAAA,QAAQ,EAAC;AAJF,GAjBkB;AAuB7BC,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAC,EADF;AAEJN,IAAAA,SAAS,EAAE,EAFP;AAGJD,IAAAA,QAAQ,EAAE,EAHN;AAIJH,IAAAA,eAAe,EAAE,WAJb;AAKJW,IAAAA,OAAO,EAAE,EALL;AAMJC,IAAAA,YAAY,EAAE;AANV;AAvBqB,CAAlB,CAAf;AAkCA,eAAetC,QAAf","sourcesContent":["import React, {useState, useEffect } from 'react';\nimport { Text, StyleSheet, View, Pressable, ScrollView } from 'react-native';\nimport uuid from 'react-native-uuid';\n\n\nconst Chapters = ({navigation, route}) => {\n\n    const [isLoading, setLoading] = useState(true);\n    const [data, setData] = useState();\n  \n    const fetchData = async (url) => {\n      const response = await fetch(url);\n      return response.json();\n    };\n  \n    const getMangas = () => {\n      try {\n        fetchData(`https://mangareader3.herokuapp.com/${route.params.manga}`).then((data) => {\n          setData(data);\n          setLoading(false);\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    };\n  \n    useEffect(() => {\n      getMangas();\n    }, []);\n\n    return (\n        <ScrollView style={styles.container}>\n            {console.log(data[0])}\n            <Text style = {styles.title}>manga_reader</Text>\n            <Text style = {styles.manga_title}> {route.params.manga}</Text>\n            {/* <View style={styles.itemslist}>\n                {data.map(chapter =>(\n                    <Pressable key = {uuid.v4()} onPress = {() => navigation.navigate('Display',{ 'title' : route.params.title, 'chapter' : chapter })}>\n                        <Text style={styles.volume}>{chapter}</Text>\n                    </Pressable>\n                ))}\n            </View> */}\n        </ScrollView>\n    );\n}\n\n// alignText not working on android\nconst styles = StyleSheet.create({\n    container: {\n        flex:1,\n        backgroundColor: 'black',\n    },\n    title: {\n        alignSelf: 'center',\n        color: 'white',\n        fontSize: 35,\n        marginTop: 50,\n    },\n    manga_title:{\n        alignSelf: 'center',\n        color: 'red',\n        fontSize: 20,\n        marginTop: 20,\n    },\n    itemslist: {\n        marginTop:50,\n        flexDirection: 'row-reverse',\n        justifyContent: 'space-around',\n        flexWrap:\"wrap-reverse\",\n    },\n    volume: {\n        width:70,\n        marginTop: 20,\n        fontSize: 20,\n        backgroundColor: 'lightblue',\n        padding: 10,\n        borderRadius: 10\n\n    }\n});\n\nexport default Chapters;"]},"metadata":{},"sourceType":"module"}