{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport uuid from 'react-native-uuid';\n\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var fetchData = function fetchData(url) {\n    var response;\n    return _regeneratorRuntime.async(function fetchData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(url));\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.json());\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getMangas = function getMangas() {\n    try {\n      fetchData(\"https://mangareader3.herokuapp.com/\").then(function (data) {\n        setData(data);\n        setLoading(false);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(function () {\n    getMangas();\n  }, []);\n  console.log(data);\n  return React.createElement(ScrollView, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"manga_reader\"), React.createElement(View, {\n    style: styles.itemslist\n  }, isLoading ? React.createElement(ActivityIndicator, null) : data.map(function (manga) {\n    return React.createElement(Pressable, {\n      key: uuid.v4(),\n      style: styles.manga,\n      onPress: function onPress() {\n        return navigation.navigate('Chapters', {\n          'manga': manga\n        });\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 20,\n        alignSelf: 'flex-start'\n      }\n    }, manga));\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n    alignContent: 'center'\n  },\n  title: {\n    textAlign: 'center',\n    color: 'white',\n    fontSize: 35,\n    marginTop: 50\n  },\n  itemslist: {\n    marginTop: 50\n  },\n  manga: {\n    height: 80,\n    width: 200,\n    alignSelf: 'flex-start',\n    justifyContent: 'center',\n    backgroundColor: 'lightblue',\n    padding: 10,\n    marginTop: 20,\n    marginHorizontal: 30,\n    borderRadius: 10\n  }\n});\nexport default Home;","map":{"version":3,"sources":["/home/yanes/Documents/manga_reader/screens/Home.js"],"names":["React","useEffect","useState","uuid","Home","navigation","isLoading","setLoading","data","setData","fetchData","url","fetch","response","json","getMangas","then","error","console","log","styles","container","title","itemslist","map","manga","v4","navigate","fontSize","alignSelf","StyleSheet","create","flex","backgroundColor","alignContent","textAlign","color","marginTop","height","width","justifyContent","padding","marginHorizontal","borderRadius"],"mappings":"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","sourcesContent":["import React,{ useEffect, useState } from 'react';\nimport { ActivityIndicator, Text, StyleSheet, Pressable, View, ScrollView } from 'react-native';\nimport uuid from 'react-native-uuid';\n\nconst Home = ({ navigation }) => {\n\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState();\n\n  const fetchData = async (url) => {\n    const response = await fetch(url);\n    return response.json();\n  };\n\n  const getMangas = () => {\n    try {\n      fetchData(\"https://mangareader3.herokuapp.com/\").then((data) => {\n        setData(data);\n        setLoading(false);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\n  useEffect(() => {\n    getMangas();\n  }, []);\n\n  console.log(data)\n  return (\n\n    <ScrollView style = {styles.container}>\n      <Text style = {styles.title}>manga_reader</Text>\n      <View style={styles.itemslist}>\n        {isLoading ? <ActivityIndicator/> : (\n          data.map( manga => (\n            <Pressable key = {uuid.v4()} style = {styles.manga} onPress={() => navigation.navigate('Chapters',{ 'manga' : manga } )}>\n              <Text style = {{fontSize:20, alignSelf:'flex-start'}} >{manga}</Text>\n            </Pressable>\n          ))\n        )}\n      </View>\n    </ScrollView> \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex : 1,\n    backgroundColor: 'black',\n    alignContent: 'center',\n  },\n  title: {\n    textAlign: 'center',\n    color: 'white',\n    fontSize: 35,\n    marginTop: 50,\n  },\n  itemslist: {\n    marginTop:50,\n  },\n  manga : {\n    height:80,\n    width:200,\n    alignSelf: 'flex-start',\n    justifyContent: 'center',\n    backgroundColor: 'lightblue',\n    padding: 10,\n    marginTop: 20,\n    marginHorizontal:30,\n    borderRadius: 10\n  }\n});\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}