{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/yanes/Documents/manga_reader/screens/sandbox.js\";\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar Sandbox = function Sandbox() {\n  var _useState = useState(\"flex-start\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      alignContent = _useState2[0],\n      setAlignContent = _useState2[1];\n\n  return React.createElement(PreviewLayout, {\n    label: \"alignContent\",\n    selectedValue: alignContent,\n    values: [\"flex-start\", \"flex-end\", \"stretch\", \"center\", \"space-between\", \"space-around\"],\n    setSelectedValue: setAlignContent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: [styles.box, {\n      backgroundColor: \"orangered\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: [styles.box, {\n      backgroundColor: \"orange\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: [styles.box, {\n      backgroundColor: \"mediumseagreen\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: [styles.box, {\n      backgroundColor: \"deepskyblue\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: [styles.box, {\n      backgroundColor: \"mediumturquoise\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: [styles.box, {\n      backgroundColor: \"mediumslateblue\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: [styles.box, {\n      backgroundColor: \"purple\"\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar PreviewLayout = function PreviewLayout(_ref) {\n  var label = _ref.label,\n      children = _ref.children,\n      values = _ref.values,\n      selectedValue = _ref.selectedValue,\n      setSelectedValue = _ref.setSelectedValue;\n  return React.createElement(View, {\n    style: {\n      padding: 10,\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, label), React.createElement(View, {\n    style: styles.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, values.map(function (value) {\n    return React.createElement(TouchableOpacity, {\n      key: value,\n      onPress: function onPress() {\n        return setSelectedValue(value);\n      },\n      style: [styles.button, selectedValue === value && styles.selected],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: [styles.buttonLabel, selectedValue === value && styles.selectedLabel],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, value));\n  })), React.createElement(View, {\n    style: [styles.container, _defineProperty({}, label, selectedValue)],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, children));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexWrap: \"wrap\",\n    marginTop: 8,\n    backgroundColor: \"aliceblue\",\n    maxHeight: 400\n  },\n  box: {\n    width: 50,\n    height: 80\n  },\n  row: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\"\n  },\n  button: {\n    paddingHorizontal: 8,\n    paddingVertical: 6,\n    borderRadius: 4,\n    backgroundColor: \"oldlace\",\n    alignSelf: \"flex-start\",\n    marginHorizontal: \"1%\",\n    marginBottom: 6,\n    minWidth: \"48%\",\n    textAlign: \"center\"\n  },\n  selected: {\n    backgroundColor: \"coral\",\n    borderWidth: 0\n  },\n  buttonLabel: {\n    fontSize: 12,\n    fontWeight: \"500\",\n    color: \"coral\"\n  },\n  selectedLabel: {\n    color: \"white\"\n  },\n  label: {\n    textAlign: \"center\",\n    marginBottom: 10,\n    fontSize: 24\n  }\n});\nexport default Sandbox;","map":{"version":3,"sources":["/home/yanes/Documents/manga_reader/screens/sandbox.js"],"names":["React","useState","Sandbox","alignContent","setAlignContent","styles","box","backgroundColor","PreviewLayout","label","children","values","selectedValue","setSelectedValue","padding","flex","row","map","value","button","selected","buttonLabel","selectedLabel","container","StyleSheet","create","flexWrap","marginTop","maxHeight","width","height","flexDirection","paddingHorizontal","paddingVertical","borderRadius","alignSelf","marginHorizontal","marginBottom","minWidth","textAlign","borderWidth","fontSize","fontWeight","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { View, TouchableOpacity, Text, StyleSheet } from \"react-native\";\n\nconst Sandbox = () => {\n  const [alignContent, setAlignContent] = useState(\"flex-start\");\n\n  return (\n    <PreviewLayout\n      label=\"alignContent\"\n      selectedValue={alignContent}\n      values={[\n        \"flex-start\",\n        \"flex-end\",\n        \"stretch\",\n        \"center\",\n        \"space-between\",\n        \"space-around\",\n      ]}\n      setSelectedValue={setAlignContent}>\n      <View\n        style={[styles.box, { backgroundColor: \"orangered\" }]}\n      />\n      <View\n        style={[styles.box, { backgroundColor: \"orange\" }]}\n      />\n      <View\n        style={[styles.box, { backgroundColor: \"mediumseagreen\" }]}\n      />\n      <View\n        style={[styles.box, { backgroundColor: \"deepskyblue\" }]}\n      />\n      <View\n        style={[styles.box, { backgroundColor: \"mediumturquoise\" }]}\n      />\n      <View\n        style={[styles.box, { backgroundColor: \"mediumslateblue\" }]}\n      />\n      <View\n        style={[styles.box, { backgroundColor: \"purple\" }]}\n      />\n    </PreviewLayout>\n  );\n};\n\nconst PreviewLayout = ({\n  label,\n  children,\n  values,\n  selectedValue,\n  setSelectedValue,\n}) => (\n  <View style={{ padding: 10, flex: 1 }}>\n    <Text style={styles.label}>{label}</Text>\n    <View style={styles.row}>\n      {values.map((value) => (\n        <TouchableOpacity\n          key={value}\n          onPress={() => setSelectedValue(value)}\n          style={[\n            styles.button,\n            selectedValue === value && styles.selected,\n          ]}\n        >\n          <Text\n            style={[\n              styles.buttonLabel,\n              selectedValue === value &&\n                styles.selectedLabel,\n            ]}\n          >\n            {value}\n          </Text>\n        </TouchableOpacity>\n      ))}\n    </View>\n    <View\n      style={[\n        styles.container,\n        { [label]: selectedValue },\n      ]}\n    >\n      {children}\n    </View>\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexWrap: \"wrap\",\n    marginTop: 8,\n    backgroundColor: \"aliceblue\",\n    maxHeight: 400,\n  },\n  box: {\n    width: 50,\n    height: 80,\n  },\n  row: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n  },\n  button: {\n    paddingHorizontal: 8,\n    paddingVertical: 6,\n    borderRadius: 4,\n    backgroundColor: \"oldlace\",\n    alignSelf: \"flex-start\",\n    marginHorizontal: \"1%\",\n    marginBottom: 6,\n    minWidth: \"48%\",\n    textAlign: \"center\",\n  },\n  selected: {\n    backgroundColor: \"coral\",\n    borderWidth: 0,\n  },\n  buttonLabel: {\n    fontSize: 12,\n    fontWeight: \"500\",\n    color: \"coral\",\n  },\n  selectedLabel: {\n    color: \"white\",\n  },\n  label: {\n    textAlign: \"center\",\n    marginBottom: 10,\n    fontSize: 24,\n  },\n});\n\nexport default Sandbox;"]},"metadata":{},"sourceType":"module"}