{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageZoom from 'react-native-image-pan-zoom';\nimport ImageViewer from 'react-native-image-zoom-viewer';\n\nvar Display = function Display(_ref) {\n  var route = _ref.route;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var fetchData = function fetchData(url) {\n    var response;\n    return _regeneratorRuntime.async(function fetchData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(url));\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.json());\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getMangas = function getMangas() {\n    try {\n      fetchData(\"https://mangareader3.herokuapp.com/\" + route.params.title + \"/\" + route.params.chapter).then(function (data) {\n        setData(data);\n        setLoading(false);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(function () {\n    getMangas();\n  }, []);\n  return React.createElement(ImageZoom, {\n    cropWidth: Dimensions.get('window').width,\n    cropHeight: Dimensions.get('window').height,\n    imageWidth: 200,\n    imageHeight: 200\n  }, React.createElement(Image, {\n    style: {\n      width: 200,\n      height: 200\n    },\n    source: {\n      uri: 'http://v1.qzone.cc/avatar/201407/07/00/24/53b9782c444ca987.jpg!200x200.jpg'\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black'\n  },\n  page: {\n    marginTop: 40,\n    height: 500,\n    resizeMode: 'contain'\n  }\n});\nexport default Display;","map":{"version":3,"sources":["/home/yanes/Documents/manga_reader/screens/Display.js"],"names":["React","useState","useEffect","ImageZoom","ImageViewer","Display","route","isLoading","setLoading","data","setData","fetchData","url","fetch","response","json","getMangas","params","title","chapter","then","error","console","Dimensions","get","width","height","uri","styles","StyleSheet","create","container","flex","backgroundColor","page","marginTop","resizeMode"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;;;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAa;AAAA,MAAXC,KAAW,QAAXA,KAAW;;AAEzB,kBAAgCL,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOM,SAAP;AAAA,MAAkBC,UAAlB;;AACA,mBAAwBP,QAAQ,EAAhC;AAAA;AAAA,MAAOQ,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACOC,KAAK,CAACD,GAAD,CADZ;;AAAA;AACVE,YAAAA,QADU;AAAA,6CAETA,QAAQ,CAACC,IAAT,EAFS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAKA,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,QAAI;AACFL,MAAAA,SAAS,yCAAuCL,KAAK,CAACW,MAAN,CAAaC,KAApD,SAA6DZ,KAAK,CAACW,MAAN,CAAaE,OAA1E,CAAT,CAA8FC,IAA9F,CAAmG,UAACX,IAAD,EAAU;AAC3GC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAHD;AAID,KALD,CAKE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GATD;;AAYAnB,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,SAcH,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEO,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA/C;AACE,IAAA,UAAU,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBE,MADvC;AAEE,IAAA,UAAU,EAAE,GAFd;AAGE,IAAA,WAAW,EAAE;AAHf,KAIC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAACD,MAAAA,KAAK,EAAC,GAAP;AAAYC,MAAAA,MAAM,EAAC;AAAnB,KAAd;AACC,IAAA,MAAM,EAAE;AAACC,MAAAA,GAAG,EAAC;AAAL;AADT,IAJD,CAdG;AAsBH,CAhDD;;AAkDA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAC,CADE;AAEPC,IAAAA,eAAe,EAAE;AAFV,GADkB;AAK7BC,EAAAA,IAAI,EAAC;AACDC,IAAAA,SAAS,EAAE,EADV;AAEDT,IAAAA,MAAM,EAAC,GAFN;AAGDU,IAAAA,UAAU,EAAC;AAHV;AALwB,CAAlB,CAAf;AAYA,eAAe/B,OAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { View, SafeAreaView, ActivityIndicator, StyleSheet, ScrollView, Image, Dimensions } from 'react-native';\nimport ImageZoom from 'react-native-image-pan-zoom';\nimport ImageViewer from 'react-native-image-zoom-viewer';\n\nconst Display = ({route}) => {\n\n    const [isLoading, setLoading] = useState(true);\n    const [data, setData] = useState();\n  \n    const fetchData = async (url) => {\n      const response = await fetch(url);\n      return response.json();\n    };\n  \n    const getMangas = () => {\n      try {\n        fetchData(`https://mangareader3.herokuapp.com/${route.params.title}/${route.params.chapter}`).then((data) => {\n          setData(data);\n          setLoading(false);\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    };\n  \n  \n    useEffect(() => {\n      getMangas();\n    }, []);\n\n    return (\n    //   <ScrollView style={styles.container}>\n    //     {isLoading ? <ActivityIndicator/> : (\n    //       data.map(page=>(\n            // <ImageZoom cropWidth={Dimensions.get('window').width}\n            //     cropHeight={Dimensions.get('window').height}\n                // imageWidth={200}\n                // imageHeight={200}\n                // >\n\t\t\t\t// <Image style={styles.page} source={{uri: page}}></Image>\n\t\t\t// </ImageZoom>\n        //   ))\n        // )}\n    //   </ScrollView>\n\t<ImageZoom cropWidth={Dimensions.get('window').width}\n\t\t\tcropHeight={Dimensions.get('window').height}\n\t\t\timageWidth={200}\n\t\t\timageHeight={200}>\n\t\t<Image style={{width:200, height:200}}\n\t\t\tsource={{uri:'http://v1.qzone.cc/avatar/201407/07/00/24/53b9782c444ca987.jpg!200x200.jpg'}}/>\n\t</ImageZoom>\n\t);\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex:1,\n        backgroundColor: 'black',\n    },\n    page:{\n        marginTop: 40,\n        height:500,\n        resizeMode:'contain',\n    }\n});\n\nexport default Display;"]},"metadata":{},"sourceType":"module"}