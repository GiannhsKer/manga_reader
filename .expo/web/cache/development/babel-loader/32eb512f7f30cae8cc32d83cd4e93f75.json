{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport uuid from 'react-native-uuid';\nimport GallerySwiper from \"react-native-gallery-swiper\";\nimport ImageViewer from 'react-native-image-zoom-viewer';\n\nvar Display = function Display(_ref) {\n  var route = _ref.route;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var fetchData = function fetchData(url) {\n    var response;\n    return _regeneratorRuntime.async(function fetchData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(url));\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.json());\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getScans = function getScans() {\n    try {\n      fetchData(\"https://mangareader3.herokuapp.com/\" + route.params.title + \"/\" + route.params.chapter).then(function (data) {\n        setData(data);\n        setLoading(false);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(function () {\n    getScans();\n  }, []);\n  return React.createElement(ScrollView, {\n    style: styles.container\n  }, isLoading ? React.createElement(ActivityIndicator, null) : Object.keys(data).map(function (page) {\n    return React.createElement(Image, {\n      key: uuid.v4(),\n      style: styles.page,\n      source: {\n        uri: data[page]['url']\n      }\n    });\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black'\n  },\n  page: {\n    marginTop: 40,\n    height: 500,\n    resizeMode: 'contain'\n  }\n});\nexport default Display;","map":{"version":3,"sources":["/home/yanes/Documents/manga_reader/screens/Display.js"],"names":["React","useState","useEffect","uuid","GallerySwiper","ImageViewer","Display","route","isLoading","setLoading","data","setData","fetchData","url","fetch","response","json","getScans","params","title","chapter","then","error","console","styles","container","Object","keys","map","page","v4","uri","StyleSheet","create","flex","backgroundColor","marginTop","height","resizeMode"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;;;;;;;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAa;AAAA,MAAXC,KAAW,QAAXA,KAAW;;AAEzB,kBAAgCN,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOO,SAAP;AAAA,MAAkBC,UAAlB;;AACA,mBAAwBR,QAAQ,EAAhC;AAAA;AAAA,MAAOS,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACOC,KAAK,CAACD,GAAD,CADZ;;AAAA;AACVE,YAAAA,QADU;AAAA,6CAETA,QAAQ,CAACC,IAAT,EAFS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAKA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAI;AACFL,MAAAA,SAAS,yCAAuCL,KAAK,CAACW,MAAN,CAAaC,KAApD,SAA6DZ,KAAK,CAACW,MAAN,CAAaE,OAA1E,CAAT,CAA8FC,IAA9F,CAAmG,UAACX,IAAD,EAAU;AAClHC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACM,OAHD;AAID,KALD,CAKE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GATD;;AAYApB,EAAAA,SAAS,CAAC,YAAM;AACde,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAIA,SAYH,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEO,MAAM,CAACC;AAA1B,KACEjB,SAAS,GAAG,oBAAC,iBAAD,OAAH,GACVkB,MAAM,CAACC,IAAP,CAAYjB,IAAZ,EAAkBkB,GAAlB,CAAsB,UAAAC,IAAI;AAAA,WACxB,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAI1B,IAAI,CAAC2B,EAAL,EAAd;AAAyB,MAAA,KAAK,EAAEN,MAAM,CAACK,IAAvC;AAA6C,MAAA,MAAM,EAAE;AAACE,QAAAA,GAAG,EAAGrB,IAAI,CAACmB,IAAD,CAAJ,CAAW,KAAX;AAAP;AAArD,MADwB;AAAA,GAA1B,CAFD,CAZG;AAoBH,CA9CD;;AAyEA,IAAML,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,SAAS,EAAE;AACPS,IAAAA,IAAI,EAAC,CADE;AAEPC,IAAAA,eAAe,EAAE;AAFV,GADkB;AAK7BN,EAAAA,IAAI,EAAC;AACDO,IAAAA,SAAS,EAAE,EADV;AAEDC,IAAAA,MAAM,EAAC,GAFN;AAGDC,IAAAA,UAAU,EAAC;AAHV;AALwB,CAAlB,CAAf;AAYA,eAAehC,OAAf","sourcesContent":["import React, {useState, useEffect } from 'react';\nimport { Text, ActivityIndicator, StyleSheet, ScrollView, Image, Modal } from 'react-native';\nimport uuid from 'react-native-uuid';\nimport GallerySwiper from \"react-native-gallery-swiper\";\nimport ImageViewer from 'react-native-image-zoom-viewer';\n\nconst Display = ({route}) => {\n\n    const [isLoading, setLoading] = useState(true);\n    const [data, setData] = useState();\n  \n    const fetchData = async (url) => {\n      const response = await fetch(url);\n      return response.json();\n    };\n  \n    const getScans = () => {\n      try {\n        fetchData(`https://mangareader3.herokuapp.com/${route.params.title}/${route.params.chapter}`).then((data) => {\n\t\t\tsetData(data);\n\t\t\tsetLoading(false);\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    };\n  \n  \n    useEffect(() => {\n      getScans();\n    }, []);\n\n    return (\n\t\t\n\t// <GallerySwiper\n\t// \timages={data}\n\t// \tsensitiveScroll={true}\n\t// \tinitialNumToRender={20}\n\t// />\n\t// <Modal>\n    //     <ImageViewer \n    //       imageUrls={data}\n    //     />\n    // </Modal>\n\t<ScrollView style={styles.container}>\n\t\t{isLoading ? <ActivityIndicator/> : (\n\t\tObject.keys(data).map(page=>(\n\t\t\t\t<Image key = {uuid.v4()} style={styles.page} source={{uri : data[page]['url']}} ></Image>\n\t\t\t))\n\t\t)}\n\t</ScrollView> \n\t);\n}\n\n// GallerySwiper\n\t// <GallerySwiper\n\t// \timages={data}\n\t// \tsensitiveScroll={true}\n\t// \tinitialNumToRender={20}\n\t// />\n\n// Image Viewer\n\n//     <Modal>\n//         <ImageViewer \n//           imageUrls={data}\n//         />\n//     </Modal>\n\n// ScrollView without zoom\n\n// <ScrollView style={styles.container}>\n// {isLoading ? <ActivityIndicator/> : (\n//   Object.keys(data).map(page=>(\n// \t\t<Image key = {uuid.v4()} style={styles.page} source={{uri : data[page]['url']}} ></Image>\n// \t))\n// )}\n// </ScrollView> \n\nconst styles = StyleSheet.create({\n    container: {\n        flex:1,\n        backgroundColor: 'black',\n    },\n    page:{\n        marginTop: 40,\n        height:500,\n        resizeMode:'contain',\n    }\n});\n\nexport default Display;"]},"metadata":{},"sourceType":"module"}