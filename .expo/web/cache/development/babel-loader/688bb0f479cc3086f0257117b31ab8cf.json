{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar axios = require('axios');\n\nvar cheerio = require('cheerio');\n\nexport var return_a = function return_a() {\n  return _regeneratorRuntime.async(function return_a$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", \"a\");\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar scrap_it = function scrap_it(title) {\n  var url, result;\n  return _regeneratorRuntime.async(function scrap_it$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          url = \"https://m.manganelo.com/search/story/\" + title.replace(/ /g, '_');\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(axios(url).then(function (response) {\n            var final = {},\n                titles = [],\n                covers_urls = [],\n                title;\n            var html = response.data;\n            var $ = cheerio.load(html);\n            var mangas = $('.item-img', html);\n            var covers = $('.item-img > .img-loading ', html);\n\n            for (var i = 0; i < mangas.length; i++) {\n              titles.push($(mangas)[i].attribs.title);\n              covers_urls.push($(covers)[i].attribs.src);\n              title = titles[i];\n              final[title] = covers_urls[i];\n            }\n\n            return final;\n          }).catch(function (err) {\n            return err;\n          }));\n\n        case 3:\n          result = _context2.sent;\n          return _context2.abrupt(\"return\", result);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\n(function _callee() {\n  return _regeneratorRuntime.async(function _callee$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.t0 = console;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(scrap_it(\"one piece\"));\n\n        case 3:\n          _context3.t1 = _context3.sent;\n\n          _context3.t0.log.call(_context3.t0, _context3.t1);\n\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n})();","map":{"version":3,"sources":["/home/yanes/Documents/manga_reader/Scrappers/Manganelo.js"],"names":["axios","require","cheerio","return_a","scrap_it","title","url","replace","then","response","final","titles","covers_urls","html","data","$","load","mangas","covers","i","length","push","attribs","src","catch","err","result","console","log"],"mappings":";;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AAIA,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2CACf,GADe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;;AAIP,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAETC,UAAAA,GAFS,GAEH,0CAA0CD,KAAK,CAACE,OAAN,CAAc,IAAd,EAAoB,GAApB,CAFvC;AAAA;AAAA,2CAIMP,KAAK,CAACM,GAAD,CAAL,CAClBE,IADkB,CACb,UAAAC,QAAQ,EAAI;AAChB,gBAAIC,KAAK,GAAG,EAAZ;AAAA,gBAAgBC,MAAM,GAAG,EAAzB;AAAA,gBAA6BC,WAAW,GAAG,EAA3C;AAAA,gBAA+CP,KAA/C;AACA,gBAAMQ,IAAI,GAAGJ,QAAQ,CAACK,IAAtB;AACA,gBAAMC,CAAC,GAAGb,OAAO,CAACc,IAAR,CAAaH,IAAb,CAAV;AAEA,gBAAMI,MAAM,GAAGF,CAAC,CAAC,WAAD,EAAcF,IAAd,CAAhB;AACA,gBAAMK,MAAM,GAAGH,CAAC,CAAC,2BAAD,EAA8BF,IAA9B,CAAhB;;AAEA,iBAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtCR,cAAAA,MAAM,CAACU,IAAP,CAAYN,CAAC,CAACE,MAAD,CAAD,CAAUE,CAAV,EAAaG,OAAb,CAAqBjB,KAAjC;AACAO,cAAAA,WAAW,CAACS,IAAZ,CAAiBN,CAAC,CAACG,MAAD,CAAD,CAAUC,CAAV,EAAaG,OAAb,CAAqBC,GAAtC;AACAlB,cAAAA,KAAK,GAAGM,MAAM,CAACQ,CAAD,CAAd;AACAT,cAAAA,KAAK,CAACL,KAAD,CAAL,GAAeO,WAAW,CAACO,CAAD,CAA1B;AACD;;AACD,mBAAOT,KAAP;AACD,WAhBkB,EAiBlBc,KAjBkB,CAiBZ,UAAAC,GAAG;AAAA,mBAAIA,GAAJ;AAAA,WAjBS,CAJN;;AAAA;AAITC,UAAAA,MAJS;AAAA,4CAsBRA,MAtBQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;;AAyBA,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,yBACCC,OADD;AAAA;AAAA,2CACmBvB,QAAQ,CAAC,WAAD,CAD3B;;AAAA;AAAA;;AAAA,uBACSwB,GADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAD","sourcesContent":["const axios = require('axios')\nconst cheerio = require('cheerio')\n\n// import axios from 'axios'\n// import cheerio from 'cheerio'\nexport const return_a = async ()=>{\n  return \"a\"\n}\n\nconst scrap_it = async (title) => {\n\n  const url = \"https://m.manganelo.com/search/story/\" + title.replace(/ /g, '_');\n\n  const result = await axios(url)\n    .then(response => {\n      let final = {}, titles = [], covers_urls = [], title\n      const html = response.data;\n      const $ = cheerio.load(html);\n\n      const mangas = $('.item-img', html);\n      const covers = $('.item-img > .img-loading ', html);\n\n      for (let i = 0; i < mangas.length; i++) {\n        titles.push($(mangas)[i].attribs.title);\n        covers_urls.push($(covers)[i].attribs.src);\n        title = titles[i]\n        final[title] = covers_urls[i]\n      }\n      return final\n    })\n    .catch(err => err);\n  return result\n}\n\n(async () => {\n  console.log(await scrap_it(\"one piece\"))\n})()\n"]},"metadata":{},"sourceType":"module"}